/*
Problem Statement
This problem is a programming version of Problem 12 from projecteuler.net
The sequence of triangle numbers is generated by adding the natural numbers. 
So the 7'th triangle number would be 1+2+3+4+5+6+7=28. The first ten terms would be:
1,3,6,10,15,21,28,36,45,55,...
Let us list the factors of the first seven triangle numbers:

1:1
3:1,3
6:1,2,3,6
10:1,2,5,10
15:1,3,5,15
21:1,3,7,21
28:1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over N divisors?

Input
First line T, the number of testcases. Each testcase consists of N in one line.
Output
For each testcase, print the required answer in one line.

Constraints
1≤T≤10
1≤N≤103

Sample input
4
1
2
3
4
Sample output
3
6
6
28
*/
#include <iostream>
#include <vector>
#include <cmath>
#include <set>

using namespace std;

int divisors(int n)
{
  std::set<int> factors = {1, n};
  for (int x = 2; x < sqrt(n) + 1; x++)
  {
    if (n%x == 0)
    {
      factors.insert(x);
      factors.insert(n / x);
    }
  }
  return factors.size();
}

int main() 
{
  std::vector<int> a;
  int number;
  std::cin >> number;

  int count = 0;
  while (count < number)
  {
    int divisorCount;
    std::cin >> divisorCount;
    
    int triangleNumber = 1;
    int i = 2;
    while (divisors(triangleNumber) <= divisorCount)
    {
      triangleNumber += i;
      i += 1;
    }
    a.push_back(triangleNumber);
    count++;
  }

  for (auto i : a)
  {
    cout << i << endl;
  }

  system("pause");

  return 0;
}
